name: devtools-cs
on:
  push:
    branches:
      - devtools-cs
jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Cache dependencies
        id: cache-step
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: v1-node-dependencies-${{ hashFiles('./package-lock.json') }}
          restore-keys: v1-node-dependencies-
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test

# Run a docker build -> push-> scan -> login-> push
  docker-scan-build-push:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
    # first export 
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: . 
          load: true
          tags: chowjl94/cicd-workflow-d3:latest


      #Run a security check against the docker image
      - name: Run Snyk to check Docker images for vulnerabilities
        id: snyk-scan
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

        with:
          image: chowjl94/cicd-workflow-d3:latest
          args: --severity-threshold=high

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # push after export
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with: 
          push: true
          tags: chowjl94/cicd-workflow-d3:latest


  aws-setup-deploy:
    runs-on: ubuntu-latest

    outputs:
      instances_data: ${{ steps.instances-data.outputs.instances_data }}
      instances_count: ${{ steps.instances-data.outputs.instances_count }}
    steps:
      - 
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEYID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-southeast-1
      -
        name: Get Instance Data
        id: instances-data
        run: |
          OUTPUT=`aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=${EC2_INSTANCE_PREFIX}*" "Name=instance-state-name,Values=running" \
            --query "Reservations[*].Instances[*].PublicDnsName" \
            --output json | jq -c '{include: map({public_dns: .[]})}'`
          echo "::set-output name=instances_data::$OUTPUT"
          LENGTH=`echo $OUTPUT | jq '.[] | length'`
          echo "::set-output name=instances_count::$LENGTH"
  
  # ssh:
  #   runs-on: ubuntu-latest
  #   steps:
  #     -
  #       uses: actions/checkout@v2
  #       name: Checkout
  #     -
  #       name: Pull docker image and run container
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{secrets.HOST}}
  #         username: ${{ secrets.SSH_USER }}
  #         key: ${{ secrets.RSA }}
  #         port: 22
  #         script: |
  #           whoami
  #           docker pull chowjl94/cicd-workflow-d3:latest
  #           docker run -d --restart always -p 80:3000 chowjl94/cicd-workflow-d3:latest